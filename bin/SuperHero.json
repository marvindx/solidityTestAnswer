{
    "contractName": "SuperHero",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "name",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "symbol",
                    "type": "string"
                },
                {
                    "internalType": "address",
                    "name": "_testToken",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "approved",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "ApprovalForAll",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "Paused",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "Unpaused",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "getApproved",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "heroes",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "name",
                    "type": "string"
                },
                {
                    "internalType": "uint256",
                    "name": "age",
                    "type": "uint256"
                },
                {
                    "internalType": "enum SuperHero.Level",
                    "name": "level",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                }
            ],
            "name": "isApprovedForAll",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "name",
                    "type": "string"
                },
                {
                    "internalType": "uint256",
                    "name": "age",
                    "type": "uint256"
                }
            ],
            "name": "mint",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "ownerOf",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "pause",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "paused",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "_data",
                    "type": "bytes"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_token",
                    "type": "address"
                }
            ],
            "name": "setTestToken",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "interfaceId",
                    "type": "bytes4"
                }
            ],
            "name": "supportsInterface",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "testToken",
            "outputs": [
                {
                    "internalType": "contract ITestToken",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "tokenURI",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "unpause",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_testToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"heroes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"},{\"internalType\":\"enum SuperHero.Level\",\"name\":\"level\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setTestToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testToken\",\"outputs\":[{\"internalType\":\"contract ITestToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/marvin/contracts/solidityTestAnswer/SuperHero.sol\":\"SuperHero\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/marvin/contracts/solidityTestAnswer/SuperHero.sol\":{\"keccak256\":\"0x20e7771c7a2d03b20527ddbe8924b8cb98427e7f7dc288b8d04531482b52de7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c350cfc4b69c24fde0867abd908a7d02816959950395bfbf8fb14b5123d0e22\",\"dweb:/ipfs/QmRkoa3svJanczc47UKtFfKp3zXKzFj2fJEWer2fBzELXq\"]},\"/Users/marvin/contracts/solidityTestAnswer/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"/Users/marvin/contracts/solidityTestAnswer/node_modules/@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xa35b1f2a670cd2a701a52c398032c9fed72df1909fe394d77ceacbf074e8937b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72b957861691ebdaa78c52834465c4f8296480fe4f1a12ba72dc6c0c8ac076dd\",\"dweb:/ipfs/QmVz1sHCwgEivHPRDswdt9tdvky7EnWqFmbuk1wFE55VMG\"]},\"/Users/marvin/contracts/solidityTestAnswer/node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cc5f36034a77d105263ae6d8cc18b16260b4a0f6cdb1a26f21ba3670fdd06dd\",\"dweb:/ipfs/QmdJrJ2LoG546BkfyZPta96BNmaVBfqZoh8kq7PqHuQyPk\"]},\"/Users/marvin/contracts/solidityTestAnswer/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x7d2b8ba4b256bfcac347991b75242f9bc37f499c5236af50cf09d0b35943dc0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8eeaf6afe00229af4c232ca058bb08b7a24cc3886f0b387159ac49ffd8b5312\",\"dweb:/ipfs/QmdnVKmDDWDvdRr6vtrxy3G6WafqA2TAhUZv1UFMsm4B4r\"]},\"/Users/marvin/contracts/solidityTestAnswer/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e7820bcf567e6892d937c3cb10db263a4042e446799bca602535868d822384e\",\"dweb:/ipfs/QmPG2oeDjKncqsEeyYGjAN7CwAJmMgHterXGGnpzhha4z7\"]},\"/Users/marvin/contracts/solidityTestAnswer/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]},\"/Users/marvin/contracts/solidityTestAnswer/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xd32fb7f530a914b1083d10a6bed3a586f2451952fec04fe542bcc670a82f7ba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af63ab940a34687c45f0ad84960b048fc5f49330c92ccb422db7822a444733b9\",\"dweb:/ipfs/QmUShaQEu8HS1GjDnsMJQ8jkZEBrecn6NuDZ3pfjY1gVck\"]},\"/Users/marvin/contracts/solidityTestAnswer/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"/Users/marvin/contracts/solidityTestAnswer/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"/Users/marvin/contracts/solidityTestAnswer/node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d636ba90bbbeed04a1ea7fe9ec2466757e30fd38ba2ca173636dbf69a518735e\",\"dweb:/ipfs/QmQwCB2BHnEuYR22PYt9HkpbgeFDhq4rHmaYqAZbX3WRC7\"]},\"/Users/marvin/contracts/solidityTestAnswer/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"/Users/marvin/contracts/solidityTestAnswer/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"/Users/marvin/contracts/solidityTestAnswer/node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x3778dc944f4a696335878bad8beca60f38b7c79b7a0bd8ddbeb618bd502a95ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12961fd593c79b60088c8829fd760db4149790b1c702411919fac76769e8c39a\",\"dweb:/ipfs/QmXN79ZS3btSrPhiMBWtWmdwaWKjYTaAYpVMt5QHvwwKMw\"]}},\"version\":1}",
    "bytecode": "",
    "deployedBytecode": "608060405234801561001057600080fd5b506004361061014d5760003560e01c80636895179d116100c3578063a22cb4651161007c578063a22cb465146102a3578063a8d4a03b146102b6578063b88d4fde146102d8578063c87b56dd146102eb578063e985e9c5146102fe578063f2fde38b1461031157600080fd5b80636895179d1461024157806370a0823114610254578063715018a6146102755780638456cb591461027d5780638da5cb5b1461028557806395d89b411461029b57600080fd5b806323b872dd1161011557806323b872dd146101e25780633f4ba83a146101f557806342842e0e146101fd5780635a3cbc8b146102105780635c975abb146102235780636352211e1461022e57600080fd5b806301ffc9a714610152578063056b01ce1461017a57806306fdde031461018f578063081812fc146101a4578063095ea7b3146101cf575b600080fd5b6101656101603660046116ef565b610324565b60405190151581526020015b60405180910390f35b61018d610188366004611798565b610376565b005b61019761057e565b6040516101719190611849565b6101b76101b236600461185c565b610610565b6040516001600160a01b039091168152602001610171565b61018d6101dd366004611891565b6106a5565b61018d6101f03660046118bb565b6107bb565b61018d6107ec565b61018d61020b3660046118bb565b610826565b61018d61021e3660046118f7565b610841565b60065460ff16610165565b6101b761023c36600461185c565b6108f4565b6009546101b7906001600160a01b031681565b6102676102623660046118f7565b61096b565b604051908152602001610171565b61018d6109f2565b61018d610a2c565b60065461010090046001600160a01b03166101b7565b610197610a64565b61018d6102b1366004611912565b610a73565b6102c96102c436600461185c565b610b38565b60405161017193929190611964565b61018d6102e63660046119ab565b610bfe565b6101976102f936600461185c565b610c36565b61016561030c366004611a27565b610d1e565b61018d61031f3660046118f7565b610d4c565b60006001600160e01b031982166380ac58cd60e01b148061035557506001600160e01b03198216635b5e139f60e01b145b8061037057506301ffc9a760e01b6001600160e01b03198316145b92915050565b333b156103ca5760405162461bcd60e51b815260206004820152601760248201527f53757065724865726f3a206e6f7420636f6e747261637400000000000000000060448201526064015b60405180910390fd5b6002600754141561041d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103c1565b60026007556040805160608101825283815260208082018490526000928201839052600880546001810182559352815180519293849360039091027ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30192610489928492910190611640565b506020820151816001015560408201518160020160006101000a81548160ff021916908360028111156104be576104be61194e565b021790555050600854600091506104d790600190611a70565b90506104e33382610ded565b6104ee600a33610f2f565b610573576009546040516340c10f1960e01b8152336004820152678ac7230489e8000060248201526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561054557600080fd5b505af1158015610559573d6000803e3d6000fd5b5050505061057133600a610f5190919063ffffffff16565b505b505060016007555050565b60606000805461058d90611a87565b80601f01602080910402602001604051908101604052809291908181526020018280546105b990611a87565b80156106065780601f106105db57610100808354040283529160200191610606565b820191906000526020600020905b8154815290600101906020018083116105e957829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166106895760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103c1565b506000908152600460205260409020546001600160a01b031690565b60006106b0826108f4565b9050806001600160a01b0316836001600160a01b0316141561071e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103c1565b336001600160a01b038216148061073a575061073a8133610d1e565b6107ac5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103c1565b6107b68383610f66565b505050565b6107c53382610fd4565b6107e15760405162461bcd60e51b81526004016103c190611ac2565b6107b68383836110ab565b6006546001600160a01b0361010090910416331461081c5760405162461bcd60e51b81526004016103c190611b13565b61082461124b565b565b6107b683838360405180602001604052806000815250610bfe565b6006546001600160a01b036101009091041633146108715760405162461bcd60e51b81526004016103c190611b13565b6001600160a01b0381166108d25760405162461bcd60e51b815260206004820152602260248201527f53757065724865726f3a205f74657374546f6b656e2061646472657373207a65604482015261726f60f01b60648201526084016103c1565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b6000818152600260205260408120546001600160a01b0316806103705760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103c1565b60006001600160a01b0382166109d65760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103c1565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b03610100909104163314610a225760405162461bcd60e51b81526004016103c190611b13565b61082460006112de565b6006546001600160a01b03610100909104163314610a5c5760405162461bcd60e51b81526004016103c190611b13565b610824611338565b60606001805461058d90611a87565b6001600160a01b038216331415610acc5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103c1565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b60088181548110610b4857600080fd5b9060005260206000209060030201600091509050806000018054610b6b90611a87565b80601f0160208091040260200160405190810160405280929190818152602001828054610b9790611a87565b8015610be45780601f10610bb957610100808354040283529160200191610be4565b820191906000526020600020905b815481529060010190602001808311610bc757829003601f168201915b50505050600183015460029093015491929160ff16905083565b610c083383610fd4565b610c245760405162461bcd60e51b81526004016103c190611ac2565b610c30848484846113b3565b50505050565b6000818152600260205260409020546060906001600160a01b0316610cb55760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103c1565b6000610ccc60408051602081019091526000815290565b90506000815111610cec5760405180602001604052806000815250610d17565b80610cf6846113e6565b604051602001610d07929190611b48565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6006546001600160a01b03610100909104163314610d7c5760405162461bcd60e51b81526004016103c190611b13565b6001600160a01b038116610de15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103c1565b610dea816112de565b50565b6001600160a01b038216610e435760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103c1565b6000818152600260205260409020546001600160a01b031615610ea85760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103c1565b6001600160a01b0382166000908152600360205260408120805460019290610ed1908490611b77565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160a01b03811660009081526001830160205260408120541515610d17565b6000610d17836001600160a01b0384166114e4565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610f9b826108f4565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661104d5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103c1565b6000611058836108f4565b9050806001600160a01b0316846001600160a01b031614806110935750836001600160a01b031661108884610610565b6001600160a01b0316145b806110a357506110a38185610d1e565b949350505050565b826001600160a01b03166110be826108f4565b6001600160a01b0316146111265760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016103c1565b6001600160a01b0382166111885760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103c1565b611193600082610f66565b6001600160a01b03831660009081526003602052604081208054600192906111bc908490611a70565b90915550506001600160a01b03821660009081526003602052604081208054600192906111ea908490611b77565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60065460ff166112945760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016103c1565b6006805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60065460ff161561137e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016103c1565b6006805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586112c13390565b6113be8484846110ab565b6113ca84848484611533565b610c305760405162461bcd60e51b81526004016103c190611b8f565b60608161140a5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611434578061141e81611be1565b915061142d9050600a83611c12565b915061140e565b60008167ffffffffffffffff81111561144f5761144f61170c565b6040519080825280601f01601f191660200182016040528015611479576020820181803683370190505b5090505b84156110a35761148e600183611a70565b915061149b600a86611c26565b6114a6906030611b77565b60f81b8183815181106114bb576114bb611c3a565b60200101906001600160f81b031916908160001a9053506114dd600a86611c12565b945061147d565b600081815260018301602052604081205461152b57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610370565b506000610370565b60006001600160a01b0384163b1561163557604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611577903390899088908890600401611c50565b602060405180830381600087803b15801561159157600080fd5b505af19250505080156115c1575060408051601f3d908101601f191682019092526115be91810190611c8d565b60015b61161b573d8080156115ef576040519150601f19603f3d011682016040523d82523d6000602084013e6115f4565b606091505b5080516116135760405162461bcd60e51b81526004016103c190611b8f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506110a3565b506001949350505050565b82805461164c90611a87565b90600052602060002090601f01602090048101928261166e57600085556116b4565b82601f1061168757805160ff19168380011785556116b4565b828001600101855582156116b4579182015b828111156116b4578251825591602001919060010190611699565b506116c09291506116c4565b5090565b5b808211156116c057600081556001016116c5565b6001600160e01b031981168114610dea57600080fd5b60006020828403121561170157600080fd5b8135610d17816116d9565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561173d5761173d61170c565b604051601f8501601f19908116603f011681019082821181831017156117655761176561170c565b8160405280935085815286868601111561177e57600080fd5b858560208301376000602087830101525050509392505050565b600080604083850312156117ab57600080fd5b823567ffffffffffffffff8111156117c257600080fd5b8301601f810185136117d357600080fd5b6117e285823560208401611722565b95602094909401359450505050565b60005b8381101561180c5781810151838201526020016117f4565b83811115610c305750506000910152565b600081518084526118358160208601602086016117f1565b601f01601f19169290920160200192915050565b602081526000610d17602083018461181d565b60006020828403121561186e57600080fd5b5035919050565b80356001600160a01b038116811461188c57600080fd5b919050565b600080604083850312156118a457600080fd5b6118ad83611875565b946020939093013593505050565b6000806000606084860312156118d057600080fd5b6118d984611875565b92506118e760208501611875565b9150604084013590509250925092565b60006020828403121561190957600080fd5b610d1782611875565b6000806040838503121561192557600080fd5b61192e83611875565b91506020830135801515811461194357600080fd5b809150509250929050565b634e487b7160e01b600052602160045260246000fd5b606081526000611977606083018661181d565b90508360208301526003831061199d57634e487b7160e01b600052602160045260246000fd5b826040830152949350505050565b600080600080608085870312156119c157600080fd5b6119ca85611875565b93506119d860208601611875565b925060408501359150606085013567ffffffffffffffff8111156119fb57600080fd5b8501601f81018713611a0c57600080fd5b611a1b87823560208401611722565b91505092959194509250565b60008060408385031215611a3a57600080fd5b611a4383611875565b9150611a5160208401611875565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600082821015611a8257611a82611a5a565b500390565b600181811c90821680611a9b57607f821691505b60208210811415611abc57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008351611b5a8184602088016117f1565b835190830190611b6e8183602088016117f1565b01949350505050565b60008219821115611b8a57611b8a611a5a565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000600019821415611bf557611bf5611a5a565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611c2157611c21611bfc565b500490565b600082611c3557611c35611bfc565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611c839083018461181d565b9695505050505050565b600060208284031215611c9f57600080fd5b8151610d17816116d956fea2646970667358221220e05f0c7d76af3cf29f2cf7251931277f62966021e14f5df60b3baa1ec3faa4ab64736f6c63430008090033",
    "sourceMap": "927:1558:0:-:0;;;1436:419;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1382:13:4;;1547:4:0;;1553:6;;1382:13:4;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1405:17:4;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;924:7:2;:15;;-1:-1:-1;;924:15:2;;;-1:-1:-1;867:23:1;666:10:9;867:9:1;:23::i;:::-;1637:1:3;1742:7;:22;-1:-1:-1;;;;;1579:24:0;::::1;1571:71;;;::::0;-1:-1:-1;;;1571:71:0;;1972:2:14;1571:71:0::1;::::0;::::1;1954:21:14::0;2011:2;1991:18;;;1984:30;2050:34;2030:18;;;2023:62;-1:-1:-1;;;2101:18:14;;;2094:32;2143:19;;1571:71:0::1;;;;;;;;1652:9;:34:::0;;-1:-1:-1;;;;;;1652:34:0::1;-1:-1:-1::0;;;;;1652:34:0;::::1;;::::0;;1720:97:::1;::::0;;;;;;;-1:-1:-1;1720:97:0::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;1827:6:::1;:21:::0;;-1:-1:-1;1827:21:0;::::1;::::0;;;;;;;;1720:97;;;;1827:21:::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;1561:294;1436:419:::0;;;927:1558;;2041:169:1;2115:6;;;-1:-1:-1;;;;;2131:17:1;;;2115:6;2131:17;;;-1:-1:-1;;;;;;2131:17:1;;;;;;2163:40;;2115:6;;;;;;;;2163:40;;2096:16;;2163:40;2086:124;2041:169;:::o;927:1558:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;927:1558:0;;;-1:-1:-1;927:1558:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:14;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:14;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:14;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:14:o;1036:729::-;1144:6;1152;1160;1213:2;1201:9;1192:7;1188:23;1184:32;1181:52;;;1229:1;1226;1219:12;1181:52;1256:16;;-1:-1:-1;;;;;1321:14:14;;;1318:34;;;1348:1;1345;1338:12;1318:34;1371:61;1424:7;1415:6;1404:9;1400:22;1371:61;:::i;:::-;1361:71;;1478:2;1467:9;1463:18;1457:25;1441:41;;1507:2;1497:8;1494:16;1491:36;;;1523:1;1520;1513:12;1491:36;;1546:63;1601:7;1590:8;1579:9;1575:24;1546:63;:::i;:::-;1652:2;1637:18;;1631:25;1536:73;;-1:-1:-1;1631:25:14;-1:-1:-1;;;;;;1685:31:14;;1675:42;;1665:70;;1731:1;1728;1721:12;1665:70;1754:5;1744:15;;;1036:729;;;;;:::o;2173:127::-;2234:10;2229:3;2225:20;2222:1;2215:31;2265:4;2262:1;2255:15;2289:4;2286:1;2279:15;2305:380;2384:1;2380:12;;;;2427;;;2448:61;;2502:4;2494:6;2490:17;2480:27;;2448:61;2555:2;2547:6;2544:14;2524:18;2521:38;2518:161;;;2601:10;2596:3;2592:20;2589:1;2582:31;2636:4;2633:1;2626:15;2664:4;2661:1;2654:15;2518:161;;2305:380;;;:::o;:::-;927:1558:0;;;;;;",
    "deployedSourceMap": "927:1558:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1496:300:4;;;;;;:::i;:::-;;:::i;:::-;;;565:14:14;;558:22;540:41;;528:2;513:18;1496:300:4;;;;;;;;1861:437:0;;;;;;:::i;:::-;;:::i;:::-;;2414:98:4;;;:::i;:::-;;;;;;;:::i;3925:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2989:32:14;;;2971:51;;2959:2;2944:18;3925:217:4;2825:203:14;3463:401:4;;;;;;:::i;:::-;;:::i;4789:330::-;;;;;;:::i;:::-;;:::i;772:69:0:-;;;:::i;5185:179:4:-;;;;;;:::i;:::-;;:::i;2304::0:-;;;;;;:::i;:::-;;:::i;1041:84:2:-;1111:7;;;;1041:84;;2117:235:4;;;;;;:::i;:::-;;:::i;1241:27:0:-;;;;;-1:-1:-1;;;;;1241:27:0;;;1855:205:4;;;;;;:::i;:::-;;:::i;:::-;;;4365:25:14;;;4353:2;4338:18;1855:205:4;4219:177:14;1605:92:1;;;:::i;701:65:0:-;;;:::i;973:85:1:-;1045:6;;;;;-1:-1:-1;;;;;1045:6:1;973:85;;2576:102:4;;;:::i;4209:290::-;;;;;;:::i;:::-;;:::i;1214:20:0:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;5430:320:4:-;;;;;;:::i;:::-;;:::i;2744:329::-;;;;;;:::i;:::-;;:::i;4565:162::-;;;;;;:::i;:::-;;:::i;1846:189:1:-;;;;;;:::i;:::-;;:::i;1496:300:4:-;1598:4;-1:-1:-1;;;;;;1633:40:4;;-1:-1:-1;;;1633:40:4;;:104;;-1:-1:-1;;;;;;;1689:48:4;;-1:-1:-1;;;1689:48:4;1633:104;:156;;;-1:-1:-1;;;;;;;;;;871:40:11;;;1753:36:4;1614:175;1496:300;-1:-1:-1;;1496:300:4:o;1861:437:0:-;1373:10;1034:20:8;1080:8;1345:67:0;;;;-1:-1:-1;;;1345:67:0;;6550:2:14;1345:67:0;;;6532:21:14;6589:2;6569:18;;;6562:30;6628:25;6608:18;;;6601:53;6671:18;;1345:67:0;;;;;;;;;1680:1:3::1;2259:7;;:19;;2251:63;;;::::0;-1:-1:-1;;;2251:63:3;;6902:2:14;2251:63:3::1;::::0;::::1;6884:21:14::0;6941:2;6921:18;;;6914:30;6980:33;6960:18;;;6953:61;7031:18;;2251:63:3::1;6700:355:14::0;2251:63:3::1;1680:1;2389:7;:18:::0;1997:46:0::2;::::0;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;;::::2;::::0;;;-1:-1:-1;1997:46:0;;;;;;2053:6:::2;:17:::0;;::::2;::::0;::::2;::::0;;;;;;;;1997:46;;;;2053:17:::2;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;::::2;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;;2099:6:0::2;:13:::0;2081:15:::2;::::0;-1:-1:-1;2099:17:0::2;::::0;2115:1:::2;::::0;2099:17:::2;:::i;:::-;2081:35;;2126:26;2132:10;2144:7;2126:5;:26::i;:::-;2168;:5;2183:10;2168:14;:26::i;:::-;2163:129;;2210:9;::::0;:36:::2;::::0;-1:-1:-1;;;2210:36:0;;2225:10:::2;2210:36;::::0;::::2;7523:51:14::0;2237:8:0::2;7590:18:14::0;;;7583:34;-1:-1:-1;;;;;2210:9:0;;::::2;::::0;:14:::2;::::0;7496:18:14;;2210:36:0::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;2260:21;2270:10;2260:5;:9;;:21;;;;:::i;:::-;;2163:129;-1:-1:-1::0;;1637:1:3::1;2562:7;:22:::0;-1:-1:-1;;1861:437:0:o;2414:98:4:-;2468:13;2500:5;2493:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:98;:::o;3925:217::-;4001:7;7310:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7310:16:4;4020:73;;;;-1:-1:-1;;;4020:73:4;;8215:2:14;4020:73:4;;;8197:21:14;8254:2;8234:18;;;8227:30;8293:34;8273:18;;;8266:62;-1:-1:-1;;;8344:18:14;;;8337:42;8396:19;;4020:73:4;8013:408:14;4020:73:4;-1:-1:-1;4111:24:4;;;;:15;:24;;;;;;-1:-1:-1;;;;;4111:24:4;;3925:217::o;3463:401::-;3543:13;3559:23;3574:7;3559:14;:23::i;:::-;3543:39;;3606:5;-1:-1:-1;;;;;3600:11:4;:2;-1:-1:-1;;;;;3600:11:4;;;3592:57;;;;-1:-1:-1;;;3592:57:4;;8628:2:14;3592:57:4;;;8610:21:14;8667:2;8647:18;;;8640:30;8706:34;8686:18;;;8679:62;-1:-1:-1;;;8757:18:14;;;8750:31;8798:19;;3592:57:4;8426:397:14;3592:57:4;666:10:9;-1:-1:-1;;;;;3681:21:4;;;;:62;;-1:-1:-1;3706:37:4;3723:5;666:10:9;4565:162:4;:::i;3706:37::-;3660:165;;;;-1:-1:-1;;;3660:165:4;;9030:2:14;3660:165:4;;;9012:21:14;9069:2;9049:18;;;9042:30;9108:34;9088:18;;;9081:62;9179:26;9159:18;;;9152:54;9223:19;;3660:165:4;8828:420:14;3660:165:4;3836:21;3845:2;3849:7;3836:8;:21::i;:::-;3533:331;3463:401;;:::o;4789:330::-;4978:41;666:10:9;5011:7:4;4978:18;:41::i;:::-;4970:103;;;;-1:-1:-1;;;4970:103:4;;;;;;;:::i;:::-;5084:28;5094:4;5100:2;5104:7;5084:9;:28::i;772:69:0:-;1045:6:1;;-1:-1:-1;;;;;1045:6:1;;;;;666:10:9;1185:23:1;1177:68;;;;-1:-1:-1;;;1177:68:1;;;;;;;:::i;:::-;818:16:0::1;:14;:16::i;:::-;772:69::o:0;5185:179:4:-;5318:39;5335:4;5341:2;5345:7;5318:39;;;;;;;;;;;;:16;:39::i;2304:179:0:-;1045:6:1;;-1:-1:-1;;;;;1045:6:1;;;;;666:10:9;1185:23:1;1177:68;;;;-1:-1:-1;;;1177:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2377:20:0;::::1;2369:67;;;::::0;-1:-1:-1;;;2369:67:0;;10234:2:14;2369:67:0::1;::::0;::::1;10216:21:14::0;10273:2;10253:18;;;10246:30;10312:34;10292:18;;;10285:62;-1:-1:-1;;;10363:18:14;;;10356:32;10405:19;;2369:67:0::1;10032:398:14::0;2369:67:0::1;2446:9;:30:::0;;-1:-1:-1;;;;;;2446:30:0::1;-1:-1:-1::0;;;;;2446:30:0;;;::::1;::::0;;;::::1;::::0;;2304:179::o;2117:235:4:-;2189:7;2224:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2224:16:4;2258:19;2250:73;;;;-1:-1:-1;;;2250:73:4;;10637:2:14;2250:73:4;;;10619:21:14;10676:2;10656:18;;;10649:30;10715:34;10695:18;;;10688:62;-1:-1:-1;;;10766:18:14;;;10759:39;10815:19;;2250:73:4;10435:405:14;1855:205:4;1927:7;-1:-1:-1;;;;;1954:19:4;;1946:74;;;;-1:-1:-1;;;1946:74:4;;11047:2:14;1946:74:4;;;11029:21:14;11086:2;11066:18;;;11059:30;11125:34;11105:18;;;11098:62;-1:-1:-1;;;11176:18:14;;;11169:40;11226:19;;1946:74:4;10845:406:14;1946:74:4;-1:-1:-1;;;;;;2037:16:4;;;;;:9;:16;;;;;;;1855:205::o;1605:92:1:-;1045:6;;-1:-1:-1;;;;;1045:6:1;;;;;666:10:9;1185:23:1;1177:68;;;;-1:-1:-1;;;1177:68:1;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;701:65:0:-:0;1045:6:1;;-1:-1:-1;;;;;1045:6:1;;;;;666:10:9;1185:23:1;1177:68;;;;-1:-1:-1;;;1177:68:1;;;;;;;:::i;:::-;745:14:0::1;:12;:14::i;2576:102:4:-:0;2632:13;2664:7;2657:14;;;;;:::i;4209:290::-;-1:-1:-1;;;;;4311:24:4;;666:10:9;4311:24:4;;4303:62;;;;-1:-1:-1;;;4303:62:4;;11458:2:14;4303:62:4;;;11440:21:14;11497:2;11477:18;;;11470:30;11536:27;11516:18;;;11509:55;11581:18;;4303:62:4;11256:349:14;4303:62:4;666:10:9;4376:32:4;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;4376:42:4;;;;;;;;;;;;:53;;-1:-1:-1;;4376:53:4;;;;;;;;;;4444:48;;540:41:14;;;4376:42:4;;666:10:9;4444:48:4;;513:18:14;4444:48:4;;;;;;;4209:290;;:::o;1214:20:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1214:20:0;;;;;;;;;;;;;;;-1:-1:-1;1214:20:0;:::o;5430:320:4:-;5599:41;666:10:9;5632:7:4;5599:18;:41::i;:::-;5591:103;;;;-1:-1:-1;;;5591:103:4;;;;;;;:::i;:::-;5704:39;5718:4;5724:2;5728:7;5737:5;5704:13;:39::i;:::-;5430:320;;;;:::o;2744:329::-;7287:4;7310:16;;;:7;:16;;;;;;2817:13;;-1:-1:-1;;;;;7310:16:4;2842:76;;;;-1:-1:-1;;;2842:76:4;;11812:2:14;2842:76:4;;;11794:21:14;11851:2;11831:18;;;11824:30;11890:34;11870:18;;;11863:62;-1:-1:-1;;;11941:18:14;;;11934:45;11996:19;;2842:76:4;11610:411:14;2842:76:4;2929:21;2953:10;3390:9;;;;;;;;;-1:-1:-1;3390:9:4;;;3314:92;2953:10;2929:34;;3004:1;2986:7;2980:21;:25;:86;;;;;;;;;;;;;;;;;3032:7;3041:18;:7;:16;:18::i;:::-;3015:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2980:86;2973:93;2744:329;-1:-1:-1;;;2744:329:4:o;4565:162::-;-1:-1:-1;;;;;4685:25:4;;;4662:4;4685:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4565:162::o;1846:189:1:-;1045:6;;-1:-1:-1;;;;;1045:6:1;;;;;666:10:9;1185:23:1;1177:68;;;;-1:-1:-1;;;1177:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:1;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:1;;12703:2:14;1926:73:1::1;::::0;::::1;12685:21:14::0;12742:2;12722:18;;;12715:30;12781:34;12761:18;;;12754:62;-1:-1:-1;;;12832:18:14;;;12825:36;12878:19;;1926:73:1::1;12501:402:14::0;1926:73:1::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;9141:372:4:-;-1:-1:-1;;;;;9220:16:4;;9212:61;;;;-1:-1:-1;;;9212:61:4;;13110:2:14;9212:61:4;;;13092:21:14;;;13129:18;;;13122:30;13188:34;13168:18;;;13161:62;13240:18;;9212:61:4;12908:356:14;9212:61:4;7287:4;7310:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7310:16:4;:30;9283:58;;;;-1:-1:-1;;;9283:58:4;;13471:2:14;9283:58:4;;;13453:21:14;13510:2;13490:18;;;13483:30;13549;13529:18;;;13522:58;13597:18;;9283:58:4;13269:352:14;9283:58:4;-1:-1:-1;;;;;9408:13:4;;;;;;:9;:13;;;;;:18;;9425:1;;9408:13;:18;;9425:1;;9408:18;:::i;:::-;;;;-1:-1:-1;;9436:16:4;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9436:21:4;-1:-1:-1;;;;;9436:21:4;;;;;;;;9473:33;;9436:16;;;9473:33;;9436:16;;9473:33;9141:372;;:::o;8100:165:13:-;-1:-1:-1;;;;;8233:23:13;;8180:4;3767:19;;;:12;;;:19;;;;;;:24;;8203:55;3671:127;7545:150;7615:4;7638:50;7643:3;-1:-1:-1;;;;;7663:23:13;;7638:4;:50::i;11073:171:4:-;11147:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11147:29:4;-1:-1:-1;;;;;11147:29:4;;;;;;;;:24;;11200:23;11147:24;11200:14;:23::i;:::-;-1:-1:-1;;;;;11191:46:4;;;;;;;;;;;11073:171;;:::o;7505:344::-;7598:4;7310:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7310:16:4;7614:73;;;;-1:-1:-1;;;7614:73:4;;13961:2:14;7614:73:4;;;13943:21:14;14000:2;13980:18;;;13973:30;14039:34;14019:18;;;14012:62;-1:-1:-1;;;14090:18:14;;;14083:42;14142:19;;7614:73:4;13759:408:14;7614:73:4;7697:13;7713:23;7728:7;7713:14;:23::i;:::-;7697:39;;7765:5;-1:-1:-1;;;;;7754:16:4;:7;-1:-1:-1;;;;;7754:16:4;;:51;;;;7798:7;-1:-1:-1;;;;;7774:31:4;:20;7786:7;7774:11;:20::i;:::-;-1:-1:-1;;;;;7774:31:4;;7754:51;:87;;;;7809:32;7826:5;7833:7;7809:16;:32::i;:::-;7746:96;7505:344;-1:-1:-1;;;;7505:344:4:o;10402:560::-;10556:4;-1:-1:-1;;;;;10529:31:4;:23;10544:7;10529:14;:23::i;:::-;-1:-1:-1;;;;;10529:31:4;;10521:85;;;;-1:-1:-1;;;10521:85:4;;14374:2:14;10521:85:4;;;14356:21:14;14413:2;14393:18;;;14386:30;14452:34;14432:18;;;14425:62;-1:-1:-1;;;14503:18:14;;;14496:39;14552:19;;10521:85:4;14172:405:14;10521:85:4;-1:-1:-1;;;;;10624:16:4;;10616:65;;;;-1:-1:-1;;;10616:65:4;;14784:2:14;10616:65:4;;;14766:21:14;14823:2;14803:18;;;14796:30;14862:34;14842:18;;;14835:62;-1:-1:-1;;;14913:18:14;;;14906:34;14957:19;;10616:65:4;14582:400:14;10616:65:4;10793:29;10810:1;10814:7;10793:8;:29::i;:::-;-1:-1:-1;;;;;10833:15:4;;;;;;:9;:15;;;;;:20;;10852:1;;10833:15;:20;;10852:1;;10833:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10863:13:4;;;;;;:9;:13;;;;;:18;;10880:1;;10863:13;:18;;10880:1;;10863:18;:::i;:::-;;;;-1:-1:-1;;10891:16:4;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10891:21:4;-1:-1:-1;;;;;10891:21:4;;;;;;;;;10928:27;;10891:16;;10928:27;;;;;;;10402:560;;;:::o;2053:117:2:-;1111:7;;;;1612:41;;;;-1:-1:-1;;;1612:41:2;;15189:2:14;1612:41:2;;;15171:21:14;15228:2;15208:18;;;15201:30;-1:-1:-1;;;15247:18:14;;;15240:50;15307:18;;1612:41:2;14987:344:14;1612:41:2;2111:7:::1;:15:::0;;-1:-1:-1;;2111:15:2::1;::::0;;2141:22:::1;666:10:9::0;2150:12:2::1;2141:22;::::0;-1:-1:-1;;;;;2989:32:14;;;2971:51;;2959:2;2944:18;2141:22:2::1;;;;;;;2053:117::o:0;2041:169:1:-;2115:6;;;-1:-1:-1;;;;;2131:17:1;;;2115:6;2131:17;;;-1:-1:-1;;;;;;2131:17:1;;;;;;2163:40;;2115:6;;;;;;;;2163:40;;2096:16;;2163:40;2086:124;2041:169;:::o;1806:115:2:-;1111:7;;;;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:2;;15538:2:14;1346:38:2;;;15520:21:14;15577:2;15557:18;;;15550:30;-1:-1:-1;;;15596:18:14;;;15589:46;15652:18;;1346:38:2;15336:340:14;1346:38:2;1865:7:::1;:14:::0;;-1:-1:-1;;1865:14:2::1;1875:4;1865:14;::::0;;1894:20:::1;1901:12;666:10:9::0;;587:96;6612:307:4;6763:28;6773:4;6779:2;6783:7;6763:9;:28::i;:::-;6809:48;6832:4;6838:2;6842:7;6851:5;6809:22;:48::i;:::-;6801:111;;;;-1:-1:-1;;;6801:111:4;;;;;;;:::i;275:703:10:-;331:13;548:10;544:51;;-1:-1:-1;;574:10:10;;;;;;;;;;;;-1:-1:-1;;;574:10:10;;;;;275:703::o;544:51::-;619:5;604:12;658:75;665:9;;658:75;;690:8;;;;:::i;:::-;;-1:-1:-1;712:10:10;;-1:-1:-1;720:2:10;712:10;;:::i;:::-;;;658:75;;;742:19;774:6;764:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;764:17:10;;742:39;;791:150;798:10;;791:150;;824:11;834:1;824:11;;:::i;:::-;;-1:-1:-1;892:10:10;900:2;892:5;:10;:::i;:::-;879:24;;:2;:24;:::i;:::-;866:39;;849:6;856;849:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;849:56:10;;;;;;;;-1:-1:-1;919:11:10;928:2;919:11;;:::i;:::-;;;791:150;;1630:404:13;1693:4;3767:19;;;:12;;;:19;;;;;;1709:319;;-1:-1:-1;1751:23:13;;;;;;;;:11;:23;;;;;;;;;;;;;1931:18;;1909:19;;;:12;;;:19;;;;;;:40;;;;1963:11;;1709:319;-1:-1:-1;2012:5:13;2005:12;;11797:778:4;11947:4;-1:-1:-1;;;;;11967:13:4;;1034:20:8;1080:8;11963:606:4;;12002:72;;-1:-1:-1;;;12002:72:4;;-1:-1:-1;;;;;12002:36:4;;;;;:72;;666:10:9;;12053:4:4;;12059:7;;12068:5;;12002:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12002:72:4;;;;;;;;-1:-1:-1;;12002:72:4;;;;;;;;;;;;:::i;:::-;;;11998:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12241:13:4;;12237:266;;12283:60;;-1:-1:-1;;;12283:60:4;;;;;;;:::i;12237:266::-;12455:6;12449:13;12440:6;12436:2;12432:15;12425:38;11998:519;-1:-1:-1;;;;;;12124:51:4;-1:-1:-1;;;12124:51:4;;-1:-1:-1;12117:58:4;;11963:606;-1:-1:-1;12554:4:4;11797:778;;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:14;-1:-1:-1;;;;;;88:32:14;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:127::-;653:10;648:3;644:20;641:1;634:31;684:4;681:1;674:15;708:4;705:1;698:15;724:632;789:5;819:18;860:2;852:6;849:14;846:40;;;866:18;;:::i;:::-;941:2;935:9;909:2;995:15;;-1:-1:-1;;991:24:14;;;1017:2;987:33;983:42;971:55;;;1041:18;;;1061:22;;;1038:46;1035:72;;;1087:18;;:::i;:::-;1127:10;1123:2;1116:22;1156:6;1147:15;;1186:6;1178;1171:22;1226:3;1217:6;1212:3;1208:16;1205:25;1202:45;;;1243:1;1240;1233:12;1202:45;1293:6;1288:3;1281:4;1273:6;1269:17;1256:44;1348:1;1341:4;1332:6;1324;1320:19;1316:30;1309:41;;;;724:632;;;;;:::o;1361:523::-;1439:6;1447;1500:2;1488:9;1479:7;1475:23;1471:32;1468:52;;;1516:1;1513;1506:12;1468:52;1556:9;1543:23;1589:18;1581:6;1578:30;1575:50;;;1621:1;1618;1611:12;1575:50;1644:22;;1697:4;1689:13;;1685:27;-1:-1:-1;1675:55:14;;1726:1;1723;1716:12;1675:55;1749:76;1817:7;1812:2;1799:16;1792:4;1788:2;1784:13;1749:76;:::i;:::-;1739:86;1872:4;1857:20;;;;1844:34;;-1:-1:-1;;;;1361:523:14:o;1889:258::-;1961:1;1971:113;1985:6;1982:1;1979:13;1971:113;;;2061:11;;;2055:18;2042:11;;;2035:39;2007:2;2000:10;1971:113;;;2102:6;2099:1;2096:13;2093:48;;;-1:-1:-1;;2137:1:14;2119:16;;2112:27;1889:258::o;2152:::-;2194:3;2232:5;2226:12;2259:6;2254:3;2247:19;2275:63;2331:6;2324:4;2319:3;2315:14;2308:4;2301:5;2297:16;2275:63;:::i;:::-;2392:2;2371:15;-1:-1:-1;;2367:29:14;2358:39;;;;2399:4;2354:50;;2152:258;-1:-1:-1;;2152:258:14:o;2415:220::-;2564:2;2553:9;2546:21;2527:4;2584:45;2625:2;2614:9;2610:18;2602:6;2584:45;:::i;2640:180::-;2699:6;2752:2;2740:9;2731:7;2727:23;2723:32;2720:52;;;2768:1;2765;2758:12;2720:52;-1:-1:-1;2791:23:14;;2640:180;-1:-1:-1;2640:180:14:o;3033:173::-;3101:20;;-1:-1:-1;;;;;3150:31:14;;3140:42;;3130:70;;3196:1;3193;3186:12;3130:70;3033:173;;;:::o;3211:254::-;3279:6;3287;3340:2;3328:9;3319:7;3315:23;3311:32;3308:52;;;3356:1;3353;3346:12;3308:52;3379:29;3398:9;3379:29;:::i;:::-;3369:39;3455:2;3440:18;;;;3427:32;;-1:-1:-1;;;3211:254:14:o;3470:328::-;3547:6;3555;3563;3616:2;3604:9;3595:7;3591:23;3587:32;3584:52;;;3632:1;3629;3622:12;3584:52;3655:29;3674:9;3655:29;:::i;:::-;3645:39;;3703:38;3737:2;3726:9;3722:18;3703:38;:::i;:::-;3693:48;;3788:2;3777:9;3773:18;3760:32;3750:42;;3470:328;;;;;:::o;3803:186::-;3862:6;3915:2;3903:9;3894:7;3890:23;3886:32;3883:52;;;3931:1;3928;3921:12;3883:52;3954:29;3973:9;3954:29;:::i;4401:347::-;4466:6;4474;4527:2;4515:9;4506:7;4502:23;4498:32;4495:52;;;4543:1;4540;4533:12;4495:52;4566:29;4585:9;4566:29;:::i;:::-;4556:39;;4645:2;4634:9;4630:18;4617:32;4692:5;4685:13;4678:21;4671:5;4668:32;4658:60;;4714:1;4711;4704:12;4658:60;4737:5;4727:15;;;4401:347;;;;;:::o;4753:127::-;4814:10;4809:3;4805:20;4802:1;4795:31;4845:4;4842:1;4835:15;4869:4;4866:1;4859:15;4885:521;5096:2;5085:9;5078:21;5059:4;5116:45;5157:2;5146:9;5142:18;5134:6;5116:45;:::i;:::-;5108:53;;5197:6;5192:2;5181:9;5177:18;5170:34;5234:1;5226:6;5223:13;5213:144;;5279:10;5274:3;5270:20;5267:1;5260:31;5314:4;5311:1;5304:15;5342:4;5339:1;5332:15;5213:144;5393:6;5388:2;5377:9;5373:18;5366:34;4885:521;;;;;;:::o;5411:667::-;5506:6;5514;5522;5530;5583:3;5571:9;5562:7;5558:23;5554:33;5551:53;;;5600:1;5597;5590:12;5551:53;5623:29;5642:9;5623:29;:::i;:::-;5613:39;;5671:38;5705:2;5694:9;5690:18;5671:38;:::i;:::-;5661:48;;5756:2;5745:9;5741:18;5728:32;5718:42;;5811:2;5800:9;5796:18;5783:32;5838:18;5830:6;5827:30;5824:50;;;5870:1;5867;5860:12;5824:50;5893:22;;5946:4;5938:13;;5934:27;-1:-1:-1;5924:55:14;;5975:1;5972;5965:12;5924:55;5998:74;6064:7;6059:2;6046:16;6041:2;6037;6033:11;5998:74;:::i;:::-;5988:84;;;5411:667;;;;;;;:::o;6083:260::-;6151:6;6159;6212:2;6200:9;6191:7;6187:23;6183:32;6180:52;;;6228:1;6225;6218:12;6180:52;6251:29;6270:9;6251:29;:::i;:::-;6241:39;;6299:38;6333:2;6322:9;6318:18;6299:38;:::i;:::-;6289:48;;6083:260;;;;;:::o;7060:127::-;7121:10;7116:3;7112:20;7109:1;7102:31;7152:4;7149:1;7142:15;7176:4;7173:1;7166:15;7192:125;7232:4;7260:1;7257;7254:8;7251:34;;;7265:18;;:::i;:::-;-1:-1:-1;7302:9:14;;7192:125::o;7628:380::-;7707:1;7703:12;;;;7750;;;7771:61;;7825:4;7817:6;7813:17;7803:27;;7771:61;7878:2;7870:6;7867:14;7847:18;7844:38;7841:161;;;7924:10;7919:3;7915:20;7912:1;7905:31;7959:4;7956:1;7949:15;7987:4;7984:1;7977:15;7841:161;;7628:380;;;:::o;9253:413::-;9455:2;9437:21;;;9494:2;9474:18;;;9467:30;9533:34;9528:2;9513:18;;9506:62;-1:-1:-1;;;9599:2:14;9584:18;;9577:47;9656:3;9641:19;;9253:413::o;9671:356::-;9873:2;9855:21;;;9892:18;;;9885:30;9951:34;9946:2;9931:18;;9924:62;10018:2;10003:18;;9671:356::o;12026:470::-;12205:3;12243:6;12237:13;12259:53;12305:6;12300:3;12293:4;12285:6;12281:17;12259:53;:::i;:::-;12375:13;;12334:16;;;;12397:57;12375:13;12334:16;12431:4;12419:17;;12397:57;:::i;:::-;12470:20;;12026:470;-1:-1:-1;;;;12026:470:14:o;13626:128::-;13666:3;13697:1;13693:6;13690:1;13687:13;13684:39;;;13703:18;;:::i;:::-;-1:-1:-1;13739:9:14;;13626:128::o;15681:414::-;15883:2;15865:21;;;15922:2;15902:18;;;15895:30;15961:34;15956:2;15941:18;;15934:62;-1:-1:-1;;;16027:2:14;16012:18;;16005:48;16085:3;16070:19;;15681:414::o;16100:135::-;16139:3;-1:-1:-1;;16160:17:14;;16157:43;;;16180:18;;:::i;:::-;-1:-1:-1;16227:1:14;16216:13;;16100:135::o;16240:127::-;16301:10;16296:3;16292:20;16289:1;16282:31;16332:4;16329:1;16322:15;16356:4;16353:1;16346:15;16372:120;16412:1;16438;16428:35;;16443:18;;:::i;:::-;-1:-1:-1;16477:9:14;;16372:120::o;16497:112::-;16529:1;16555;16545:35;;16560:18;;:::i;:::-;-1:-1:-1;16594:9:14;;16497:112::o;16614:127::-;16675:10;16670:3;16666:20;16663:1;16656:31;16706:4;16703:1;16696:15;16730:4;16727:1;16720:15;16746:489;-1:-1:-1;;;;;17015:15:14;;;16997:34;;17067:15;;17062:2;17047:18;;17040:43;17114:2;17099:18;;17092:34;;;17162:3;17157:2;17142:18;;17135:31;;;16940:4;;17183:46;;17209:19;;17201:6;17183:46;:::i;:::-;17175:54;16746:489;-1:-1:-1;;;;;;16746:489:14:o;17240:249::-;17309:6;17362:2;17350:9;17341:7;17337:23;17333:32;17330:52;;;17378:1;17375;17368:12;17330:52;17410:9;17404:16;17429:30;17453:5;17429:30;:::i",
    "sourcePath": "/Users/marvin/contracts/solidityTestAnswer/SuperHero.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.9+commit.e5eed63a"
    },
    "ast": {
        "absolutePath": "/Users/marvin/contracts/solidityTestAnswer/SuperHero.sol",
        "exportedSymbols": {
            "Address": [
                1738
            ],
            "Context": [
                1760
            ],
            "ERC165": [
                1987
            ],
            "ERC721": [
                1280
            ],
            "EnumerableSet": [
                2598
            ],
            "IERC165": [
                1999
            ],
            "IERC721": [
                1396
            ],
            "IERC721Metadata": [
                1441
            ],
            "IERC721Receiver": [
                1414
            ],
            "ITestToken": [
                43
            ],
            "Ownable": [
                332
            ],
            "OwnerPausable": [
                35
            ],
            "Pausable": [
                424
            ],
            "ReentrancyGuard": [
                464
            ],
            "Strings": [
                1963
            ],
            "SuperHero": [
                228
            ]
        },
        "id": 229,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "32:23:0"
            },
            {
                "absolutePath": "/Users/marvin/contracts/solidityTestAnswer/node_modules/@openzeppelin/contracts/access/Ownable.sol",
                "file": "/Users/marvin/contracts/solidityTestAnswer/node_modules/@openzeppelin/contracts/access/Ownable.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 229,
                "sourceUnit": 333,
                "src": "57:108:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/marvin/contracts/solidityTestAnswer/node_modules/@openzeppelin/contracts/security/Pausable.sol",
                "file": "/Users/marvin/contracts/solidityTestAnswer/node_modules/@openzeppelin/contracts/security/Pausable.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 229,
                "sourceUnit": 425,
                "src": "166:111:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/marvin/contracts/solidityTestAnswer/node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
                "file": "/Users/marvin/contracts/solidityTestAnswer/node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
                "id": 4,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 229,
                "sourceUnit": 465,
                "src": "278:118:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/marvin/contracts/solidityTestAnswer/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                "file": "/Users/marvin/contracts/solidityTestAnswer/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                "id": 5,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 229,
                "sourceUnit": 1281,
                "src": "397:113:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/marvin/contracts/solidityTestAnswer/node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
                "file": "/Users/marvin/contracts/solidityTestAnswer/node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
                "id": 6,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 229,
                "sourceUnit": 2599,
                "src": "511:121:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 7,
                            "name": "Pausable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 424,
                            "src": "660:8:0"
                        },
                        "id": 8,
                        "nodeType": "InheritanceSpecifier",
                        "src": "660:8:0"
                    },
                    {
                        "baseName": {
                            "id": 9,
                            "name": "Ownable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 332,
                            "src": "670:7:0"
                        },
                        "id": 10,
                        "nodeType": "InheritanceSpecifier",
                        "src": "670:7:0"
                    },
                    {
                        "baseName": {
                            "id": 11,
                            "name": "ReentrancyGuard",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 464,
                            "src": "679:15:0"
                        },
                        "id": 12,
                        "nodeType": "InheritanceSpecifier",
                        "src": "679:15:0"
                    }
                ],
                "canonicalName": "OwnerPausable",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 35,
                "linearizedBaseContracts": [
                    35,
                    464,
                    332,
                    424,
                    1760
                ],
                "name": "OwnerPausable",
                "nameLocation": "643:13:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "body": {
                            "id": 22,
                            "nodeType": "Block",
                            "src": "735:31:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "id": 17,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967271,
                                                "src": "745:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_OwnerPausable_$35_$",
                                                    "typeString": "type(contract super OwnerPausable)"
                                                }
                                            },
                                            "id": 19,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "_pause",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 407,
                                            "src": "745:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 20,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "745:14:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 21,
                                    "nodeType": "ExpressionStatement",
                                    "src": "745:14:0"
                                }
                            ]
                        },
                        "functionSelector": "8456cb59",
                        "id": 23,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 15,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 14,
                                    "name": "onlyOwner",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 275,
                                    "src": "725:9:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "725:9:0"
                            }
                        ],
                        "name": "pause",
                        "nameLocation": "710:5:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 13,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "715:2:0"
                        },
                        "returnParameters": {
                            "id": 16,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "735:0:0"
                        },
                        "scope": 35,
                        "src": "701:65:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 33,
                            "nodeType": "Block",
                            "src": "808:33:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "id": 28,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967271,
                                                "src": "818:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_OwnerPausable_$35_$",
                                                    "typeString": "type(contract super OwnerPausable)"
                                                }
                                            },
                                            "id": 30,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "_unpause",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 423,
                                            "src": "818:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 31,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "818:16:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 32,
                                    "nodeType": "ExpressionStatement",
                                    "src": "818:16:0"
                                }
                            ]
                        },
                        "functionSelector": "3f4ba83a",
                        "id": 34,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 26,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 25,
                                    "name": "onlyOwner",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 275,
                                    "src": "798:9:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "798:9:0"
                            }
                        ],
                        "name": "unpause",
                        "nameLocation": "781:7:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 24,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "788:2:0"
                        },
                        "returnParameters": {
                            "id": 27,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "808:0:0"
                        },
                        "scope": 35,
                        "src": "772:69:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 229,
                "src": "634:209:0",
                "usedErrors": []
            },
            {
                "abstract": false,
                "baseContracts": [],
                "canonicalName": "ITestToken",
                "contractDependencies": [],
                "contractKind": "interface",
                "fullyImplemented": false,
                "id": 43,
                "linearizedBaseContracts": [
                    43
                ],
                "name": "ITestToken",
                "nameLocation": "855:10:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "functionSelector": "40c10f19",
                        "id": 42,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "mint",
                        "nameLocation": "881:4:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 40,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 37,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "894:2:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 42,
                                    "src": "886:10:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 36,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "886:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 39,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "906:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 42,
                                    "src": "898:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 38,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "898:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "885:28:0"
                        },
                        "returnParameters": {
                            "id": 41,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "922:0:0"
                        },
                        "scope": 43,
                        "src": "872:51:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "scope": 229,
                "src": "845:80:0",
                "usedErrors": []
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 44,
                            "name": "ERC721",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1280,
                            "src": "949:6:0"
                        },
                        "id": 45,
                        "nodeType": "InheritanceSpecifier",
                        "src": "949:6:0"
                    },
                    {
                        "baseName": {
                            "id": 46,
                            "name": "OwnerPausable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 35,
                            "src": "957:13:0"
                        },
                        "id": 47,
                        "nodeType": "InheritanceSpecifier",
                        "src": "957:13:0"
                    }
                ],
                "canonicalName": "SuperHero",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 228,
                "linearizedBaseContracts": [
                    228,
                    35,
                    464,
                    332,
                    424,
                    1280,
                    1441,
                    1396,
                    1987,
                    1999,
                    1760
                ],
                "name": "SuperHero",
                "nameLocation": "936:9:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "id": 50,
                        "libraryName": {
                            "id": 48,
                            "name": "Address",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1738,
                            "src": "983:7:0"
                        },
                        "nodeType": "UsingForDirective",
                        "src": "977:26:0",
                        "typeName": {
                            "id": 49,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "995:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        }
                    },
                    {
                        "id": 54,
                        "libraryName": {
                            "id": 51,
                            "name": "EnumerableSet",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2598,
                            "src": "1014:13:0"
                        },
                        "nodeType": "UsingForDirective",
                        "src": "1008:49:0",
                        "typeName": {
                            "id": 53,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 52,
                                "name": "EnumerableSet.AddressSet",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2311,
                                "src": "1032:24:0"
                            },
                            "referencedDeclaration": 2311,
                            "src": "1032:24:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$2311_storage_ptr",
                                "typeString": "struct EnumerableSet.AddressSet"
                            }
                        }
                    },
                    {
                        "canonicalName": "SuperHero.Level",
                        "id": 58,
                        "members": [
                            {
                                "id": 55,
                                "name": "Low",
                                "nameLocation": "1084:3:0",
                                "nodeType": "EnumValue",
                                "src": "1084:3:0"
                            },
                            {
                                "id": 56,
                                "name": "Mid",
                                "nameLocation": "1097:3:0",
                                "nodeType": "EnumValue",
                                "src": "1097:3:0"
                            },
                            {
                                "id": 57,
                                "name": "High",
                                "nameLocation": "1110:4:0",
                                "nodeType": "EnumValue",
                                "src": "1110:4:0"
                            }
                        ],
                        "name": "Level",
                        "nameLocation": "1068:5:0",
                        "nodeType": "EnumDefinition",
                        "src": "1063:57:0"
                    },
                    {
                        "canonicalName": "SuperHero.Hero",
                        "id": 66,
                        "members": [
                            {
                                "constant": false,
                                "id": 60,
                                "mutability": "mutable",
                                "name": "name",
                                "nameLocation": "1155:4:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 66,
                                "src": "1148:11:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage_ptr",
                                    "typeString": "string"
                                },
                                "typeName": {
                                    "id": 59,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1148:6:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage_ptr",
                                        "typeString": "string"
                                    }
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 62,
                                "mutability": "mutable",
                                "name": "age",
                                "nameLocation": "1177:3:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 66,
                                "src": "1169:11:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 61,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1169:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 65,
                                "mutability": "mutable",
                                "name": "level",
                                "nameLocation": "1196:5:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 66,
                                "src": "1190:11:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Level_$58",
                                    "typeString": "enum SuperHero.Level"
                                },
                                "typeName": {
                                    "id": 64,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                        "id": 63,
                                        "name": "Level",
                                        "nodeType": "IdentifierPath",
                                        "referencedDeclaration": 58,
                                        "src": "1190:5:0"
                                    },
                                    "referencedDeclaration": 58,
                                    "src": "1190:5:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_Level_$58",
                                        "typeString": "enum SuperHero.Level"
                                    }
                                },
                                "visibility": "internal"
                            }
                        ],
                        "name": "Hero",
                        "nameLocation": "1133:4:0",
                        "nodeType": "StructDefinition",
                        "scope": 228,
                        "src": "1126:82:0",
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "a8d4a03b",
                        "id": 70,
                        "mutability": "mutable",
                        "name": "heroes",
                        "nameLocation": "1228:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "1214:20:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Hero_$66_storage_$dyn_storage",
                            "typeString": "struct SuperHero.Hero[]"
                        },
                        "typeName": {
                            "baseType": {
                                "id": 68,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                    "id": 67,
                                    "name": "Hero",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 66,
                                    "src": "1214:4:0"
                                },
                                "referencedDeclaration": 66,
                                "src": "1214:4:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Hero_$66_storage_ptr",
                                    "typeString": "struct SuperHero.Hero"
                                }
                            },
                            "id": 69,
                            "nodeType": "ArrayTypeName",
                            "src": "1214:6:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Hero_$66_storage_$dyn_storage_ptr",
                                "typeString": "struct SuperHero.Hero[]"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "6895179d",
                        "id": 73,
                        "mutability": "mutable",
                        "name": "testToken",
                        "nameLocation": "1259:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "1241:27:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ITestToken_$43",
                            "typeString": "contract ITestToken"
                        },
                        "typeName": {
                            "id": 72,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 71,
                                "name": "ITestToken",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 43,
                                "src": "1241:10:0"
                            },
                            "referencedDeclaration": 43,
                            "src": "1241:10:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITestToken_$43",
                                "typeString": "contract ITestToken"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "id": 76,
                        "mutability": "mutable",
                        "name": "users",
                        "nameLocation": "1300:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "1275:30:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressSet_$2311_storage",
                            "typeString": "struct EnumerableSet.AddressSet"
                        },
                        "typeName": {
                            "id": 75,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 74,
                                "name": "EnumerableSet.AddressSet",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2311,
                                "src": "1275:24:0"
                            },
                            "referencedDeclaration": 2311,
                            "src": "1275:24:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$2311_storage_ptr",
                                "typeString": "struct EnumerableSet.AddressSet"
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 89,
                            "nodeType": "Block",
                            "src": "1335:95:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 84,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "UnaryOperation",
                                                "operator": "!",
                                                "prefix": true,
                                                "src": "1353:31:0",
                                                "subExpression": {
                                                    "arguments": [
                                                        {
                                                            "expression": {
                                                                "id": 81,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "1373:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 82,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "1373:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "id": 79,
                                                            "name": "Address",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1738,
                                                            "src": "1354:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_contract$_Address_$1738_$",
                                                                "typeString": "type(library Address)"
                                                            }
                                                        },
                                                        "id": 80,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "isContract",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 1461,
                                                        "src": "1354:18:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                                            "typeString": "function (address) view returns (bool)"
                                                        }
                                                    },
                                                    "id": 83,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1354:30:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "53757065724865726f3a206e6f7420636f6e7472616374",
                                                "id": 85,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1386:25:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_456c537d411b8d681e7eb891a45825113e3118ebe870ea0033b076f417f9cd24",
                                                    "typeString": "literal_string \"SuperHero: not contract\""
                                                },
                                                "value": "SuperHero: not contract"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_456c537d411b8d681e7eb891a45825113e3118ebe870ea0033b076f417f9cd24",
                                                    "typeString": "literal_string \"SuperHero: not contract\""
                                                }
                                            ],
                                            "id": 78,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "1345:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 86,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1345:67:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 87,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1345:67:0"
                                },
                                {
                                    "id": 88,
                                    "nodeType": "PlaceholderStatement",
                                    "src": "1422:1:0"
                                }
                            ]
                        },
                        "id": 90,
                        "name": "NotContract",
                        "nameLocation": "1321:11:0",
                        "nodeType": "ModifierDefinition",
                        "parameters": {
                            "id": 77,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1332:2:0"
                        },
                        "src": "1312:118:0",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 138,
                            "nodeType": "Block",
                            "src": "1561:294:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 109,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 104,
                                                    "name": "_testToken",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 96,
                                                    "src": "1579:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "hexValue": "30",
                                                            "id": 107,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "1601:1:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            }
                                                        ],
                                                        "id": 106,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "1593:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 105,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "1593:7:0",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 108,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1593:10:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "1579:24:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "53757065724865726f3a205f74657374546f6b656e2061646472657373207a65726f",
                                                "id": 110,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1605:36:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_b237387642815b7eeddbc4dbc032983a9a6ab907ed7247f7d01090100707c9be",
                                                    "typeString": "literal_string \"SuperHero: _testToken address zero\""
                                                },
                                                "value": "SuperHero: _testToken address zero"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_b237387642815b7eeddbc4dbc032983a9a6ab907ed7247f7d01090100707c9be",
                                                    "typeString": "literal_string \"SuperHero: _testToken address zero\""
                                                }
                                            ],
                                            "id": 103,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "1571:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 111,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1571:71:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 112,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1571:71:0"
                                },
                                {
                                    "expression": {
                                        "id": 117,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 113,
                                            "name": "testToken",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 73,
                                            "src": "1652:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ITestToken_$43",
                                                "typeString": "contract ITestToken"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "id": 115,
                                                    "name": "_testToken",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 96,
                                                    "src": "1675:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                ],
                                                "id": 114,
                                                "name": "ITestToken",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 43,
                                                "src": "1664:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_ITestToken_$43_$",
                                                    "typeString": "type(contract ITestToken)"
                                                }
                                            },
                                            "id": 116,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1664:22:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ITestToken_$43",
                                                "typeString": "contract ITestToken"
                                            }
                                        },
                                        "src": "1652:34:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ITestToken_$43",
                                            "typeString": "contract ITestToken"
                                        }
                                    },
                                    "id": 118,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1652:34:0"
                                },
                                {
                                    "assignments": [
                                        121
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 121,
                                            "mutability": "mutable",
                                            "name": "zeroHero",
                                            "nameLocation": "1709:8:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 138,
                                            "src": "1697:20:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Hero_$66_memory_ptr",
                                                "typeString": "struct SuperHero.Hero"
                                            },
                                            "typeName": {
                                                "id": 120,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 119,
                                                    "name": "Hero",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 66,
                                                    "src": "1697:4:0"
                                                },
                                                "referencedDeclaration": 66,
                                                "src": "1697:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Hero_$66_storage_ptr",
                                                    "typeString": "struct SuperHero.Hero"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 131,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "hexValue": "",
                                                "id": 123,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1745:2:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                    "typeString": "literal_string \"\""
                                                },
                                                "value": ""
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "hexValue": "30",
                                                        "id": 126,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1774:1:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_0_by_1",
                                                            "typeString": "int_const 0"
                                                        },
                                                        "value": "0"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_rational_0_by_1",
                                                            "typeString": "int_const 0"
                                                        }
                                                    ],
                                                    "id": 125,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "1766:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_uint256_$",
                                                        "typeString": "type(uint256)"
                                                    },
                                                    "typeName": {
                                                        "id": 124,
                                                        "name": "uint256",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1766:7:0",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 127,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1766:10:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 128,
                                                    "name": "Level",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 58,
                                                    "src": "1797:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_enum$_Level_$58_$",
                                                        "typeString": "type(enum SuperHero.Level)"
                                                    }
                                                },
                                                "id": 129,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "Low",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 55,
                                                "src": "1797:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_enum$_Level_$58",
                                                    "typeString": "enum SuperHero.Level"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                    "typeString": "literal_string \"\""
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_enum$_Level_$58",
                                                    "typeString": "enum SuperHero.Level"
                                                }
                                            ],
                                            "id": 122,
                                            "name": "Hero",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 66,
                                            "src": "1720:4:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_struct$_Hero_$66_storage_ptr_$",
                                                "typeString": "type(struct SuperHero.Hero storage pointer)"
                                            }
                                        },
                                        "id": 130,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "structConstructorCall",
                                        "lValueRequested": false,
                                        "names": [
                                            "name",
                                            "age",
                                            "level"
                                        ],
                                        "nodeType": "FunctionCall",
                                        "src": "1720:97:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Hero_$66_memory_ptr",
                                            "typeString": "struct SuperHero.Hero memory"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1697:120:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 135,
                                                "name": "zeroHero",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 121,
                                                "src": "1839:8:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Hero_$66_memory_ptr",
                                                    "typeString": "struct SuperHero.Hero memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_struct$_Hero_$66_memory_ptr",
                                                    "typeString": "struct SuperHero.Hero memory"
                                                }
                                            ],
                                            "expression": {
                                                "id": 132,
                                                "name": "heroes",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 70,
                                                "src": "1827:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_Hero_$66_storage_$dyn_storage",
                                                    "typeString": "struct SuperHero.Hero storage ref[] storage ref"
                                                }
                                            },
                                            "id": 134,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "push",
                                            "nodeType": "MemberAccess",
                                            "src": "1827:11:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Hero_$66_storage_$dyn_storage_ptr_$_t_struct$_Hero_$66_storage_$returns$__$bound_to$_t_array$_t_struct$_Hero_$66_storage_$dyn_storage_ptr_$",
                                                "typeString": "function (struct SuperHero.Hero storage ref[] storage pointer,struct SuperHero.Hero storage ref)"
                                            }
                                        },
                                        "id": 136,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1827:21:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 137,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1827:21:0"
                                }
                            ]
                        },
                        "id": 139,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 99,
                                        "name": "name",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 92,
                                        "src": "1547:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    {
                                        "id": 100,
                                        "name": "symbol",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 94,
                                        "src": "1553:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    }
                                ],
                                "id": 101,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 98,
                                    "name": "ERC721",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1280,
                                    "src": "1540:6:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1540:20:0"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 97,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 92,
                                    "mutability": "mutable",
                                    "name": "name",
                                    "nameLocation": "1471:4:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 139,
                                    "src": "1457:18:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 91,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1457:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 94,
                                    "mutability": "mutable",
                                    "name": "symbol",
                                    "nameLocation": "1499:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 139,
                                    "src": "1485:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 93,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1485:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 96,
                                    "mutability": "mutable",
                                    "name": "_testToken",
                                    "nameLocation": "1523:10:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 139,
                                    "src": "1515:18:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 95,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1515:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1447:92:0"
                        },
                        "returnParameters": {
                            "id": 102,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1561:0:0"
                        },
                        "scope": 228,
                        "src": "1436:419:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 202,
                            "nodeType": "Block",
                            "src": "1968:330:0",
                            "statements": [
                                {
                                    "assignments": [
                                        152
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 152,
                                            "mutability": "mutable",
                                            "name": "hero",
                                            "nameLocation": "1990:4:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 202,
                                            "src": "1978:16:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Hero_$66_memory_ptr",
                                                "typeString": "struct SuperHero.Hero"
                                            },
                                            "typeName": {
                                                "id": 151,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 150,
                                                    "name": "Hero",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 66,
                                                    "src": "1978:4:0"
                                                },
                                                "referencedDeclaration": 66,
                                                "src": "1978:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Hero_$66_storage_ptr",
                                                    "typeString": "struct SuperHero.Hero"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 159,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 154,
                                                "name": "name",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 141,
                                                "src": "2009:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            },
                                            {
                                                "id": 155,
                                                "name": "age",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 143,
                                                "src": "2020:3:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 156,
                                                    "name": "Level",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 58,
                                                    "src": "2032:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_enum$_Level_$58_$",
                                                        "typeString": "type(enum SuperHero.Level)"
                                                    }
                                                },
                                                "id": 157,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "Low",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 55,
                                                "src": "2032:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_enum$_Level_$58",
                                                    "typeString": "enum SuperHero.Level"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_enum$_Level_$58",
                                                    "typeString": "enum SuperHero.Level"
                                                }
                                            ],
                                            "id": 153,
                                            "name": "Hero",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 66,
                                            "src": "1997:4:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_struct$_Hero_$66_storage_ptr_$",
                                                "typeString": "type(struct SuperHero.Hero storage pointer)"
                                            }
                                        },
                                        "id": 158,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "structConstructorCall",
                                        "lValueRequested": false,
                                        "names": [
                                            "name",
                                            "age",
                                            "level"
                                        ],
                                        "nodeType": "FunctionCall",
                                        "src": "1997:46:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Hero_$66_memory_ptr",
                                            "typeString": "struct SuperHero.Hero memory"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1978:65:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 163,
                                                "name": "hero",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 152,
                                                "src": "2065:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Hero_$66_memory_ptr",
                                                    "typeString": "struct SuperHero.Hero memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_struct$_Hero_$66_memory_ptr",
                                                    "typeString": "struct SuperHero.Hero memory"
                                                }
                                            ],
                                            "expression": {
                                                "id": 160,
                                                "name": "heroes",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 70,
                                                "src": "2053:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_Hero_$66_storage_$dyn_storage",
                                                    "typeString": "struct SuperHero.Hero storage ref[] storage ref"
                                                }
                                            },
                                            "id": 162,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "push",
                                            "nodeType": "MemberAccess",
                                            "src": "2053:11:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Hero_$66_storage_$dyn_storage_ptr_$_t_struct$_Hero_$66_storage_$returns$__$bound_to$_t_array$_t_struct$_Hero_$66_storage_$dyn_storage_ptr_$",
                                                "typeString": "function (struct SuperHero.Hero storage ref[] storage pointer,struct SuperHero.Hero storage ref)"
                                            }
                                        },
                                        "id": 164,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2053:17:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 165,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2053:17:0"
                                },
                                {
                                    "assignments": [
                                        167
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 167,
                                            "mutability": "mutable",
                                            "name": "tokenId",
                                            "nameLocation": "2089:7:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 202,
                                            "src": "2081:15:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 166,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2081:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 172,
                                    "initialValue": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 171,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "expression": {
                                                "id": 168,
                                                "name": "heroes",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 70,
                                                "src": "2099:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_Hero_$66_storage_$dyn_storage",
                                                    "typeString": "struct SuperHero.Hero storage ref[] storage ref"
                                                }
                                            },
                                            "id": 169,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "length",
                                            "nodeType": "MemberAccess",
                                            "src": "2099:13:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                            "hexValue": "31",
                                            "id": 170,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2115:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "2099:17:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2081:35:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 174,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "2132:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 175,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "2132:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 176,
                                                "name": "tokenId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 167,
                                                "src": "2144:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 173,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1062,
                                            "src": "2126:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 177,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2126:26:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 178,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2126:26:0"
                                },
                                {
                                    "condition": {
                                        "id": 184,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "!",
                                        "prefix": true,
                                        "src": "2167:27:0",
                                        "subExpression": {
                                            "arguments": [
                                                {
                                                    "expression": {
                                                        "id": 181,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "2183:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 182,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "2183:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                ],
                                                "expression": {
                                                    "id": 179,
                                                    "name": "users",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 76,
                                                    "src": "2168:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_AddressSet_$2311_storage",
                                                        "typeString": "struct EnumerableSet.AddressSet storage ref"
                                                    }
                                                },
                                                "id": 180,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "contains",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 2392,
                                                "src": "2168:14:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$2311_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$2311_storage_ptr_$",
                                                    "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                                                }
                                            },
                                            "id": 183,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2168:26:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 201,
                                    "nodeType": "IfStatement",
                                    "src": "2163:129:0",
                                    "trueBody": {
                                        "id": 200,
                                        "nodeType": "Block",
                                        "src": "2196:96:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "arguments": [
                                                        {
                                                            "expression": {
                                                                "id": 188,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "2225:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 189,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "2225:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        {
                                                            "hexValue": "3130",
                                                            "id": 190,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "2237:8:0",
                                                            "subdenomination": "ether",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                                                "typeString": "int_const 10000000000000000000"
                                                            },
                                                            "value": "10"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                                                "typeString": "int_const 10000000000000000000"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "id": 185,
                                                            "name": "testToken",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 73,
                                                            "src": "2210:9:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_ITestToken_$43",
                                                                "typeString": "contract ITestToken"
                                                            }
                                                        },
                                                        "id": 187,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "mint",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 42,
                                                        "src": "2210:14:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                            "typeString": "function (address,uint256) external"
                                                        }
                                                    },
                                                    "id": 191,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "2210:36:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                    }
                                                },
                                                "id": 192,
                                                "nodeType": "ExpressionStatement",
                                                "src": "2210:36:0"
                                            },
                                            {
                                                "expression": {
                                                    "arguments": [
                                                        {
                                                            "expression": {
                                                                "id": 196,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "2270:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 197,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "2270:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "id": 193,
                                                            "name": "users",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 76,
                                                            "src": "2260:5:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_AddressSet_$2311_storage",
                                                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                                                            }
                                                        },
                                                        "id": 195,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "add",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 2338,
                                                        "src": "2260:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$2311_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$2311_storage_ptr_$",
                                                            "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                                                        }
                                                    },
                                                    "id": 198,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "2260:21:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "id": 199,
                                                "nodeType": "ExpressionStatement",
                                                "src": "2260:21:0"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "functionSelector": "056b01ce",
                        "id": 203,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 146,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 145,
                                    "name": "NotContract",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 90,
                                    "src": "1931:11:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1931:11:0"
                            },
                            {
                                "id": 148,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 147,
                                    "name": "nonReentrant",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 463,
                                    "src": "1951:12:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1951:12:0"
                            }
                        ],
                        "name": "mint",
                        "nameLocation": "1870:4:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 144,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 141,
                                    "mutability": "mutable",
                                    "name": "name",
                                    "nameLocation": "1889:4:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 203,
                                    "src": "1875:18:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 140,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1875:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 143,
                                    "mutability": "mutable",
                                    "name": "age",
                                    "nameLocation": "1903:3:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 203,
                                    "src": "1895:11:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 142,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1895:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1874:33:0"
                        },
                        "returnParameters": {
                            "id": 149,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1968:0:0"
                        },
                        "scope": 228,
                        "src": "1861:437:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 226,
                            "nodeType": "Block",
                            "src": "2359:124:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 216,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 211,
                                                    "name": "_token",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 205,
                                                    "src": "2377:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "hexValue": "30",
                                                            "id": 214,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "2395:1:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            }
                                                        ],
                                                        "id": 213,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "2387:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 212,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "2387:7:0",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 215,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "2387:10:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "2377:20:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "53757065724865726f3a205f74657374546f6b656e2061646472657373207a65726f",
                                                "id": 217,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2399:36:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_b237387642815b7eeddbc4dbc032983a9a6ab907ed7247f7d01090100707c9be",
                                                    "typeString": "literal_string \"SuperHero: _testToken address zero\""
                                                },
                                                "value": "SuperHero: _testToken address zero"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_b237387642815b7eeddbc4dbc032983a9a6ab907ed7247f7d01090100707c9be",
                                                    "typeString": "literal_string \"SuperHero: _testToken address zero\""
                                                }
                                            ],
                                            "id": 210,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "2369:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 218,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2369:67:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 219,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2369:67:0"
                                },
                                {
                                    "expression": {
                                        "id": 224,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 220,
                                            "name": "testToken",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 73,
                                            "src": "2446:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ITestToken_$43",
                                                "typeString": "contract ITestToken"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "id": 222,
                                                    "name": "_token",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 205,
                                                    "src": "2469:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                ],
                                                "id": 221,
                                                "name": "ITestToken",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 43,
                                                "src": "2458:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_ITestToken_$43_$",
                                                    "typeString": "type(contract ITestToken)"
                                                }
                                            },
                                            "id": 223,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2458:18:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ITestToken_$43",
                                                "typeString": "contract ITestToken"
                                            }
                                        },
                                        "src": "2446:30:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ITestToken_$43",
                                            "typeString": "contract ITestToken"
                                        }
                                    },
                                    "id": 225,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2446:30:0"
                                }
                            ]
                        },
                        "functionSelector": "5a3cbc8b",
                        "id": 227,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 208,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 207,
                                    "name": "onlyOwner",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 275,
                                    "src": "2349:9:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "2349:9:0"
                            }
                        ],
                        "name": "setTestToken",
                        "nameLocation": "2313:12:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 206,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 205,
                                    "mutability": "mutable",
                                    "name": "_token",
                                    "nameLocation": "2334:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 227,
                                    "src": "2326:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 204,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2326:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2325:16:0"
                        },
                        "returnParameters": {
                            "id": 209,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2359:0:0"
                        },
                        "scope": 228,
                        "src": "2304:179:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 229,
                "src": "927:1558:0",
                "usedErrors": []
            }
        ],
        "src": "32:2454:0"
    },
    "functionHashes": {
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "getApproved(uint256)": "081812fc",
        "heroes(uint256)": "a8d4a03b",
        "isApprovedForAll(address,address)": "e985e9c5",
        "mint(string,uint256)": "056b01ce",
        "name()": "06fdde03",
        "owner()": "8da5cb5b",
        "ownerOf(uint256)": "6352211e",
        "pause()": "8456cb59",
        "paused()": "5c975abb",
        "renounceOwnership()": "715018a6",
        "safeTransferFrom(address,address,uint256)": "42842e0e",
        "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
        "setApprovalForAll(address,bool)": "a22cb465",
        "setTestToken(address)": "5a3cbc8b",
        "supportsInterface(bytes4)": "01ffc9a7",
        "symbol()": "95d89b41",
        "testToken()": "6895179d",
        "tokenURI(uint256)": "c87b56dd",
        "transferFrom(address,address,uint256)": "23b872dd",
        "transferOwnership(address)": "f2fde38b",
        "unpause()": "3f4ba83a"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "1478400",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "approve(address,uint256)": "infinite",
            "balanceOf(address)": "2634",
            "getApproved(uint256)": "4782",
            "heroes(uint256)": "infinite",
            "isApprovedForAll(address,address)": "infinite",
            "mint(string,uint256)": "infinite",
            "name()": "infinite",
            "owner()": "2453",
            "ownerOf(uint256)": "2689",
            "pause()": "29853",
            "paused()": "2404",
            "renounceOwnership()": "28217",
            "safeTransferFrom(address,address,uint256)": "infinite",
            "safeTransferFrom(address,address,uint256,bytes)": "infinite",
            "setApprovalForAll(address,bool)": "26650",
            "setTestToken(address)": "26849",
            "supportsInterface(bytes4)": "534",
            "symbol()": "infinite",
            "testToken()": "2360",
            "tokenURI(uint256)": "infinite",
            "transferFrom(address,address,uint256)": "infinite",
            "transferOwnership(address)": "28477",
            "unpause()": "29786"
        }
    }
}